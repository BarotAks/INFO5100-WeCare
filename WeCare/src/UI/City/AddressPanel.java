/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.City;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Data;
import model.city.Address;
import model.city.City;
import model.city.Community;

/**
 *
 * @author adityaraj
 */
public class AddressPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddressPanel
     */
    Data d;
    public AddressPanel(Data d) {
        initComponents();
        this.d = d;
        txtAddressId.setEditable(false);
        populateCommunities();
        populateAddressTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtAddressId = new javax.swing.JTextField();
        lblCommunityName = new javax.swing.JLabel();
        txtStreetAddress = new javax.swing.JTextField();
        lblCommunityCity = new javax.swing.JLabel();
        jComboBoxCommunity = new javax.swing.JComboBox<>();
        btnSaveAddress = new javax.swing.JButton();
        btnUpdateAddress = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAddress = new javax.swing.JTable();
        btnViewAddress = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtPinCode = new javax.swing.JTextField();

        jLabel2.setText("Community Directory");

        jLabel5.setText("Address Id");

        lblCommunityName.setText("Street Address");

        lblCommunityCity.setText("Community");

        btnSaveAddress.setText("Save Address");
        btnSaveAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveAddressActionPerformed(evt);
            }
        });

        btnUpdateAddress.setText("Update Adress");
        btnUpdateAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAddressActionPerformed(evt);
            }
        });

        tblAddress.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Address ID", "Street Address", "Community", "Pin Code"
            }
        ));
        jScrollPane2.setViewportView(tblAddress);

        btnViewAddress.setText("View Address");
        btnViewAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAddressActionPerformed(evt);
            }
        });

        jLabel3.setText("View Community");

        jLabel1.setText("Pin Code");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnViewAddress)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(273, 273, 273)
                            .addComponent(btnSaveAddress)
                            .addGap(18, 18, 18)
                            .addComponent(btnUpdateAddress))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(238, 238, 238)
                            .addComponent(jLabel2))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(63, 63, 63)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(15, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(350, 350, 350)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCommunityCity)
                            .addComponent(lblCommunityName)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1))
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtStreetAddress)
                            .addComponent(jComboBoxCommunity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtAddressId, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(txtPinCode))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel3)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnViewAddress)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel5))
                            .addComponent(txtAddressId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCommunityName)
                            .addComponent(txtStreetAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCommunityCity))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1))
                    .addComponent(txtPinCode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveAddress)
                    .addComponent(btnUpdateAddress))
                .addGap(17, 17, 17))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveAddressActionPerformed
        // TODO add your handling code here:

        if(jComboBoxCommunity.getSelectedItem()==null || txtStreetAddress.getText().length()==0 || txtPinCode.getText()==null){
            JOptionPane.showMessageDialog(this, "Enter All Fields");
            return;
        }
        Community c = (Community)jComboBoxCommunity.getSelectedItem();

        String streetAddress = txtStreetAddress.getText();
        String pinCode = txtPinCode.getText();
        int v = d.addAddress(c.getCommunityId(), streetAddress,pinCode);

        if(v==0){
            JOptionPane.showMessageDialog(this, "Error in creating Community");
            return;
        }

        txtStreetAddress.setText("");
        jComboBoxCommunity.setSelectedItem(null);
        JOptionPane.showMessageDialog(this, "Community Info Saved");
        populateAddressTable();
    }//GEN-LAST:event_btnSaveAddressActionPerformed

    private void btnUpdateAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAddressActionPerformed
        // TODO add your handling code here:

        /*
        try{

            if(txtCityId.getText().length() == 0 || txtCityName.getText().length()==0 || txtCityState.getText().length()==0){
                JOptionPane.showMessageDialog(this, "Enter All fields");
                return;
            }

            int v = data.updateCity(String.valueOf(txtCityId.getText()),String.valueOf(txtCityName.getText()),txtCityState.getText());
            if(v==0){
                JOptionPane.showMessageDialog(this, "Error in Updating City Data");
                return;
            }
            JOptionPane.showMessageDialog(this, "City Info Updated");
            txtCityId.setText("");
            txtCityName.setText("");
            txtCityState.setText("");
            populateCitiesTable();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Enter All fields");
            return;
        }
        populateCitiesTable();
        */
        if(txtStreetAddress.getText().length()==0 || jComboBoxCommunity.getSelectedItem()==null){
            JOptionPane.showMessageDialog(this, "Enter All fields");
            return;
        }
        //City c = (City)jComboBoxCities.getSelectedItem();
        int v = d.updateCommunity(txtAddressId.getText(),txtStreetAddress.getText());
        if(v==0){
            JOptionPane.showMessageDialog(this, "Error in Updating community Data");
            return;
        }
        JOptionPane.showMessageDialog(this, "Community Info Updated");

        txtAddressId.setText("");
        txtAddressId.setEditable(false);
        txtStreetAddress.setText("");
        txtStreetAddress.setEditable(true);
        jComboBoxCommunity.setSelectedItem("");
        jComboBoxCommunity.setEditable(true);
        populateAddressTable();
    }//GEN-LAST:event_btnUpdateAddressActionPerformed

    private void btnViewAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAddressActionPerformed
        // TODO add your handling code here:

        int selectedrowIndex = tblAddress.getSelectedRow();
        if(selectedrowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select row to view the details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblAddress.getModel();
        Address add = (Address) model.getValueAt(selectedrowIndex, 1);
        txtAddressId.setText(String.valueOf(add.getAddressId()));
        txtAddressId.setEditable(false);
        txtStreetAddress.setText(String.valueOf(add.getStreetAddress()));
        txtStreetAddress.setEditable(true);
        txtStreetAddress.setText(String.valueOf(add.getPinCode()));
        txtStreetAddress.setEditable(true);
        txtPinCode.setText(add.getPinCode());
        txtPinCode.setEditable(true);
        jComboBoxCommunity.setSelectedItem(add.getCommunity().getCommunityName());
        jComboBoxCommunity.setEditable(false);
    }//GEN-LAST:event_btnViewAddressActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSaveAddress;
    private javax.swing.JButton btnUpdateAddress;
    private javax.swing.JButton btnViewAddress;
    private javax.swing.JComboBox<Object> jComboBoxCommunity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCommunityCity;
    private javax.swing.JLabel lblCommunityName;
    private javax.swing.JTable tblAddress;
    private javax.swing.JTextField txtAddressId;
    private javax.swing.JTextField txtPinCode;
    private javax.swing.JTextField txtStreetAddress;
    // End of variables declaration//GEN-END:variables

    private void populateCommunities() {
        List<City> cities = d.getCities();
        jComboBoxCommunity.removeAllItems();
        for(City c : cities){
            for(Community comm : c.getCommunityList()){
                jComboBoxCommunity.addItem(comm);
                
            }
        
        }
    }

    private void populateAddressTable() {
        DefaultTableModel model = (DefaultTableModel) tblAddress.getModel();
        model.setRowCount(0);
        
        
        for(City c: d.getCities()){
            for(Community comm : c.getCommunityList()){
                for(Address a : comm.getHouseList()){
                    Object[] row = new Object[4];
                    row[0] = a.getAddressId();
                    row[1] = a;
                    row[2] = a.getCommunity().getCommunityName();
                    row[3] = a.getPinCode();
                    model.addRow(row);
                }
                
            }
            
        }
    }
}
