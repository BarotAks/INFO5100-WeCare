/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.users;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Data;
import model.FoodOrder;
import model.HousingDetails;
import model.HousingOrder;
import model.Person;

/**
 *
 * @author adityaraj
 */
public class FindHousingPanel extends javax.swing.JPanel {

    /**
     * Creates new form FindHousingPanel
     */
    Data d;
    Person p;
    public FindHousingPanel(Data d, Person p) {
        initComponents();
        this.d = d;
        this.p = p;
        populateApprovedHousing();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBookFood = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHousingOrders = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHousing = new javax.swing.JTable();

        btnBookFood.setText("Book");
        btnBookFood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookFoodActionPerformed(evt);
            }
        });

        tblHousingOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "OrderId", "FoodId", "Customer"
            }
        ));
        jScrollPane2.setViewportView(tblHousingOrders);

        tblHousing.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "HousingID", "Address", "Booking Date", "Available Beds", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblHousing);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBookFood)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 715, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 758, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(btnBookFood)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBookFoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookFoodActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblHousing.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select row to approve the request");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblHousing.getModel();
        HousingDetails f = (HousingDetails) model.getValueAt(selectedRowIndex, 0);
        int v = d.addHousingOrder(f,p);
        if(v==0){
            JOptionPane.showMessageDialog(this, "Error in Approving Foods");
            return;
        }
        populateApprovedHousing();
        populateHousingOrderTable();

    }//GEN-LAST:event_btnBookFoodActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBookFood;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblHousing;
    private javax.swing.JTable tblHousingOrders;
    // End of variables declaration//GEN-END:variables

    private void populateApprovedHousing() {
        DefaultTableModel model = (DefaultTableModel) tblHousing.getModel();
        model.setRowCount(0);
        
        d.getHousingDetails();
        
        for(HousingDetails f : d.getApprovedHousingDetails()){
            Object[] row = new Object[5];
            row[0] = f;
            row[1] = f.getHousingAddress();
            row[2] = f.getBookingDate();
            row[3] = f.getAvailableBeds();
            row[4] = f.getStatus();
            
            model.addRow(row);
        }
    }

    private void populateHousingOrderTable() {
        DefaultTableModel model = (DefaultTableModel) tblHousingOrders.getModel();
        model.setRowCount(0);
        d.getHousingOrderDetails();
        for(HousingOrder f : d.getHousingOrderDetails()){
            Object[] row = new Object[3];
            row[0] = f.getOrderId();
            row[1] = f.getHousingId();
            row[2] = f.getPerson();
            model.addRow(row);
        }
    }
}
