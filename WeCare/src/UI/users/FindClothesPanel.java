/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.users;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ClothesDetails;
import model.ClothesOrder;
import model.Data;
import model.Person;

/**
 *
 * @author anupamaditya
 */
public class FindClothesPanel extends javax.swing.JPanel {

    /**
     * Creates new form FindClothesPanel
     */
    Data d;
    Person p;
    public FindClothesPanel(Data d, Person p) {
        initComponents();
        this.d =d;
        this.p = p;
        populateClothesAvailable();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblFindClothesAvailable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblClothesOrders = new javax.swing.JTable();
        btnBookFood = new javax.swing.JButton();

        tblFindClothesAvailable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ClothesId", "Clothes Name", "Clothes category", "Quantity Left", "Clothes Location"
            }
        ));
        jScrollPane1.setViewportView(tblFindClothesAvailable);

        tblClothesOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "OrderId", "ClothesId", "Customer"
            }
        ));
        jScrollPane2.setViewportView(tblClothesOrders);

        btnBookFood.setText("Book");
        btnBookFood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookFoodActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBookFood)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 733, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 715, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBookFood)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBookFoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookFoodActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblFindClothesAvailable.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select row to approve the request");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblFindClothesAvailable.getModel();
        ClothesDetails c = (ClothesDetails) model.getValueAt(selectedRowIndex, 1);
        int v = d.addOrder(c,p);
        if(v==0){
            JOptionPane.showMessageDialog(this, "Error in Approving Foods");
            return;
        }
        populateClothesAvailable();
        populateClothesOrderTable();

    }//GEN-LAST:event_btnBookFoodActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBookFood;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblClothesOrders;
    private javax.swing.JTable tblFindClothesAvailable;
    // End of variables declaration//GEN-END:variables
  
    private void populateClothesAvailable() {
        DefaultTableModel model = (DefaultTableModel) tblFindClothesAvailable.getModel();
        model.setRowCount(0);
        d.getClothesDetails();
        for(ClothesDetails c : d.getApprovedClothesDetails()){
            Object[] row = new Object[6];
            row[0] = c.getClothesID();
            row[1] = c;
            row[2] = c.getClothesCategory();
            row[3] = c.getClothesQuantity();
            row[4] = c.getOrg();
            row[5] = c.getClothesStatus();
            model.addRow(row);
        }
    }

    private void populateClothesOrderTable() {
        DefaultTableModel model = (DefaultTableModel) tblClothesOrders.getModel();
        model.setRowCount(0);
        d.getClothesOrderDetails();
        for(ClothesOrder c : d.getClothesOrderDetails()){
            Object[] row = new Object[4];
            row[0] = c.getClothesId();
            row[1] = c.getOrderId();
            row[2] = c.getPerson();
            model.addRow(row);
        }
    }


}
